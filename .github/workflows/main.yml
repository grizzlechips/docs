name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "production"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloudflare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Sync with Crowdin
        id: crowdin-sync
        continue-on-error: true
        env:
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
        run: npm run crowdin:sync

      - name: Report Crowdin sync failure
        if: ${{ always() && steps.crowdin-sync.outcome != 'success' }}
        run: echo "::warning::Crowdin sync failed; continuing deploy with available locales."

      - name: Build documentation
        id: build-docs
        continue-on-error: true
        run: npm run build

      - name: Report build failure
        if: ${{ always() && steps.build-docs.outcome != 'success' }}
        run: echo "::warning::Documentation build failed; attempting deploy with existing artifacts."

      - name: Ensure build artifacts
        id: ensure-build
        if: ${{ always() }}
        run: |
          if [ ! -d build ]; then
            echo "::error::No build artifacts found; deploy skipped."
            exit 1
          fi

      - name: Deploy to Cloudflare Workers
        if: ${{ always() && steps.ensure-build.outcome == 'success' }}
        run: npx wrangler@latest deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_DEPLOY_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  algolia-reindex:
    needs: build-and-deploy
    uses: ./.github/workflows/algolia-reindex.yml
    secrets: inherit
